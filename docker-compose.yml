version: '3.9'

services:
    postgis:
        image: postgis/postgis
        container_name: postgis_container
        restart: on-failure
        environment: 
            - POSTGRES_DB=property
            - POSTGRES_USER=admin
            - POSTGRES_PASSWORD=admin
        networks: 
            - main
        ports: 
            - "5432:5432"
        volumes: 
            - ./data/postgres:/var/lib/postgresql/data 
            
    pgbackups:
        image: prodrigestivill/postgres-backup-local
        container_name: pgdump
        restart: always
        user: postgres:postgres # Optional: see below
        volumes:
            - ./data/backups:/backups
        links:
            - postgis
        depends_on:
            - postgis
        environment:
            - POSTGRES_HOST=db
            - POSTGRES_DB=postgres
            - POSTGRES_USER=postgres
            - POSTGRES_PASSWORD=postgres
         #  - POSTGRES_PASSWORD_FILE=/run/secrets/db_password <-- alternative for POSTGRES_PASSWORD (to use with docker secrets)
            - POSTGRES_EXTRA_OPTS=-Z6 --schema=public --blobs
            - SCHEDULE=@daily
            - BACKUP_KEEP_DAYS=7
            - BACKUP_KEEP_WEEKS=4
            - BACKUP_KEEP_MONTHS=6
            - HEALTHCHECK_PORT=8080
            
    pgadmin:
        image: dpage/pgadmin4
        container_name: pgadmin
        restart: on-failure
        environment:
            - PGADMIN_DEFAULT_EMAIL=a@a.com
            - PGADMIN_DEFAULT_PASSWORD=a
        ports:
            - "5050:80"
        volumes:
            - ./data/pgadmin:/var/lib/pgadmin/data
        networks:
            - main
            
    app:
        container_name: app_container
        build: .
        command: sh -c "
                    python manage.py makemigrations &&
                    python manage.py migrate --no-input && 
                    python manage.py collectstatic --no-input && 
                    python manage.py initadmin && 
                    gunicorn -k gevent config.wsgi:application -b 0.0.0.0:8000"
        restart: on-failure
        depends_on: 
            - postgis
            - redis
        expose: 
            - "8000"
        networks:
            - main
        volumes: 
            - .:/code/
            - ./static:/app/static
            - ./media:/app/media

        
    nginx:
        container_name: nginx_container
        command: nginx -g 'daemon off;'
        image: nginx
        restart: on-failure
        depends_on:
            - app
        networks: 
            - main
        ports: 
            - "80:80"
        volumes: 
            - ./nginx.conf:/etc/nginx/nginx.conf
            - ./media:/app/media
            - ./static:/app/static
    
    redis:
        image: redis
        container_name: redis_container
        command: >
            --requirepass "admin"
            --maxclients 5
        ports: 
            - "6379:6379"
        networks: 
            - main
        volumes:
        - redisdata:/data
            
            
networks: 
    main:
        external: true
        
volumes: 
    static:
        #external: true
        
    data:
        #external: true
        
    redisdata:
        #external: true
